[{"path":"https://umasscds.github.io/BuzzardsBay/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 University Massachusetts, Center Data Science Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Setting up and using example data","text":"Load package:","code":"library(BuzzardsBay)"},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"all-the-example-files","dir":"Articles","previous_headings":"","what":"All the example files","title":"Setting up and using example data","text":"put example data package one large example data store many files: default set path created tempdir() can also use parent_dir argument specify want created.","code":"paths <- setup_example_dir()"},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"a-subset-of-example-files","dir":"Articles","previous_headings":"","what":"A subset of example files","title":"Setting up and using example data","text":"can use combinations filter arguments specify subset data want include example data store. quicker use less disk space including files. example get single deployment: get deployments site WH1X: delete_old = TRUE added clear prior example data useful want reset example - perhaps clearing previously run reports QC files.","code":"paths <- setup_example_dir(site_filter =  \"RB1\", deployment_filter = \"2023-06-09\") print(paths$deployments) qc_deployment(paths$deployments[1]) paths <- setup_example_dir(site_filter =  \"WH1X\", delete_old = TRUE) print(paths$deployments)"},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"available-example-datasets","dir":"Articles","previous_headings":"","what":"Available example datasets","title":"Setting up and using example data","text":"grouped examples analysis module qc module. formats two sets files different example deployment work one two sets functions.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"aggregation-and-analysis-module","dir":"Articles","previous_headings":"Available example datasets","what":"Aggregation and Analysis Module","title":"Setting up and using example data","text":"deployments test data consists final QC CSV YAML files calibration files. test report_site(),check_site(), stitch_site(). don’t work qc_deployment().","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"ab2","dir":"Articles","previous_headings":"Available example datasets > Aggregation and Analysis Module","what":"AB2","title":"Setting up and using example data","text":"2024-08-16, 2024-08-27, 2024-09-05 3 consecutive deployments","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"e33","dir":"Articles","previous_headings":"Available example datasets > Aggregation and Analysis Module","what":"E33","title":"Setting up and using example data","text":"2024-07-09, 2024-07-23 2 consecutive deployments, second two weeks long","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"wh1x","dir":"Articles","previous_headings":"Available example datasets > Aggregation and Analysis Module","what":"WH1X","title":"Setting up and using example data","text":"2023-06-09, 2023-06-16, 2023-06-23 3 consecutive deployments","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"qc-module","dir":"Articles","previous_headings":"Available example datasets","what":"QC Module","title":"Setting up and using example data","text":"files work qc_deployment(). ton files support three different import types demonstrate issues since resolved.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"import-type-0","dir":"Articles","previous_headings":"Available example datasets > QC Module","what":"Import Type 0","title":"Setting up and using example data","text":"last import type added assigned 0 ’s fall back simple import. expects one CSV one YAML file.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"sim-2025-01-04","dir":"Articles","previous_headings":"Available example datasets > QC Module > Import Type 0","what":"SIM 2025-01-04","title":"Setting up and using example data","text":"“SIM”” made site data reformatted another site match simple import inputs.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"import-type-1---u24-and-u26","dir":"Articles","previous_headings":"Available example datasets > QC Module","what":"Import Type 1 - U24 and U26","title":"Setting up and using example data","text":"original import type supported package. based two separate Cond. loggers. logger CSV data details text file metadata calibration.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"rb1-2023-06-09","dir":"Articles","previous_headings":"Available example datasets > QC Module > Import Type 1 - U24 and U26","what":"RB1 2023-06-09","title":"Setting up and using example data","text":"First example data U24 U26 loggers.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"ob1-2024-05-21-2024-05-31","dir":"Articles","previous_headings":"Available example datasets > QC Module > Import Type 1 - U24 and U26","what":"OB1 2024-05-21, 2024-05-31","title":"Setting up and using example data","text":"two added resolve issue sensor swapped placments.csv updated indicate swap, qc_deployment) still throwing errors.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"ob1-2024-07-30","dir":"Articles","previous_headings":"Available example datasets > QC Module > Import Type 1 - U24 and U26","what":"OB1 2024-07-30","title":"Setting up and using example data","text":"conductivity meter issues fixed (average) salinity used calibration breaking QC code.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"sb2x-2024-05-15-2024-06-10","dir":"Articles","previous_headings":"Available example datasets > QC Module > Import Type 1 - U24 and U26","what":"SB2X 2024-05-15, 2024-06-10","title":"Setting up and using example data","text":"Conductivity calibrated single point calibration two dates instead standard 2-point calibration.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"bd1-2024-06-21","dir":"Articles","previous_headings":"Available example datasets > QC Module > Import Type 1 - U24 and U26","what":"BD1 2024-06-21","title":"Setting up and using example data","text":"sensor produced weird column name:","code":"From Kristin: I was working through BD1 and got the error message:   `Error in qc_deployment(deployment_dir) : The calibration data data is  missing some expected columns: \"High_Range\"`  I believe it comes down to the fact that whenever I export .csv files from  this particular sensor, it names the column \"HIgh Range High Range (?S/cm)\" as opposed to the normal \"High Range (?S/cm).\" If I try to manually adjust this, it screws up the dates saved in the .csv and I think spawns some other issues with the code. I am going to try to figure out why this particular data file exports that heading slightly differently, but could the code be adjusted to still recognize it if \"High Range\" is repeated?  If you want to look at the data I'm working with, it's BD1 2024-06-21."},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"ob9-2024-07-23","dir":"Articles","previous_headings":"Available example datasets > QC Module > Import Type 1 - U24 and U26","what":"OB9 2024-07-23","title":"Setting up and using example data","text":"Added resolve plot y axis limit expanded include -888.88 instead treating data NA thus plotting .","code":"\"OB9 for 2024-07-23 is a really good example of a dataset that has a sensor  malfunction written in, so the graphs are difficult to read.\" (the sensor error code -888.88 is getting plotted resulting in a massive  yrange on the plot)."},{"path":[]},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"bbc-2025-01-04-2025-01-26-2025-01-27","dir":"Articles","previous_headings":"Available example datasets > QC Module > Type 2 (MX801)","what":"BBC 2025-01-04, 2025-01-26, 2025-01-27)","title":"Setting up and using example data","text":"Example output new MX801 logger different format U24 U26 loggers, logs conductivity one device. several possible calibration possibilities. 2025-01-04 (2, 2) - two point calibration Cond. calibration. think common type. 2025-01-26 (2, 3)- two points three points Cond. calibration. 2025-01-27 (2, 1) - one point two points Cond. calibration. Note, think BBC id fake site. real data short tests loggers. See: BBC README.md file details.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"bbc-2025-02-14","dir":"Articles","previous_headings":"Available example datasets > QC Module > Type 2 (MX801)","what":"BBC 2025-02-14","title":"Setting up and using example data","text":"example output MX801 logger. one uses different line endings inside cells previous three files. change line endings prevented processed correctly parse_mx901_details() prior bug fixed 0.1.0.9017.","code":""},{"path":[]},{"path":"https://umasscds.github.io/BuzzardsBay/articles/example-data.html","id":"wfh-2024-04-09","dir":"Articles","previous_headings":"Available example datasets > QC Module > Tide Rider","what":"WFH 2024-04-09","title":"Setting up and using example data","text":"first example tide rider output receeived. TR_WFH_20240409_TRSX01.csv Michael Jakuba emailed Kristin Huizenga 2024-12-05. contained high frequency observations resampled 10 minute intervals. calibrated data files hacked copies separate deployment. See data-raw/make_fake_tide_rider_calibration_dir.R files generated. decided wait real logger tide rider data collected time implementing tide rider module.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ethan Plunkett. Author, maintainer. Bradley Compton. Author.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Plunkett E, Compton B (2025). BuzzardsBay: Process analyze data COMBB project. R package version 0.1.0.9031, https://umasscds.github.io/BuzzardsBay/.","code":"@Manual{,   title = {BuzzardsBay: Process and analyze data for the COMBB project},   author = {Ethan Plunkett and Bradley Compton},   year = {2025},   note = {R package version 0.1.0.9031},   url = {https://umasscds.github.io/BuzzardsBay/}, }"},{"path":"https://umasscds.github.io/BuzzardsBay/index.html","id":"buzzardsbay","dir":"","previous_headings":"","what":"Process and analyze data for the COMBB project","title":"Process and analyze data for the COMBB project","text":"goal BuzzardsBay (R package) process analyze data Continuous Oxygen Monitoring Buzzards Bay (COMBB) project. package split two modules, QC Module, prepares calibrated data produces report preparation quality control editing deployment files, Analysis Module, stitches deployment files site year set result files, produces daily statistical summary file, report seasonal statistics set graphs.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Process and analyze data for the COMBB project","text":"can install update BuzzardsBay GitHub : make seasonal reports, ’ll also need install TinyTeX, required create PDFs. Use:","code":"# install.packages(\"devtools\") devtools::install_github(\"UMassCDS/BuzzardsBay\") install.packages('tinytex') tinytex::install_tinytex()"},{"path":"https://umasscds.github.io/BuzzardsBay/index.html","id":"qc-module","dir":"","previous_headings":"","what":"QC Module","title":"Process and analyze data for the COMBB project","text":"primary function QC module qc_deployment() reads calibrated data deployment generates files containing merged flagged copies data, html report plots data. second function make_deployment_report() typically called qc_deployment() can also called independently recreate report CSV files created qc_deployment().","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/index.html","id":"file-structure","dir":"","previous_headings":"QC Module","what":"File structure","title":"Process and analyze data for the COMBB project","text":"qc_deployment() BuzzardsBay package general assume specific file structure naming convention. particular: data associated deployment stored deployment directory path /BB_Data/<year>/<site>/<year>-<month>-<day>/ e.g.\"~/BB_Data/2022/SR4/2022-07-08\". path base directory ’s name (\"BB_Data\" example) can valid path. Simple import based CSV YAML file. HOBOware output .csv details.txt file conductivity logger. Likely U24 U26 loggers. single .xlsx file generate MX801 logger. See help import_calibrated_data() detailed description files.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/index.html","id":"usage","dir":"","previous_headings":"QC Module","what":"Usage","title":"Process and analyze data for the COMBB project","text":"files place can process calibrated data deployment generate html report code .","code":"library(BuzzardsBay) deployment_dir <- \"\"  # Provide full path here. Don't include `Calibration/` qc_deployment(deployment_dir)"},{"path":"https://umasscds.github.io/BuzzardsBay/index.html","id":"running-on-example-data","dir":"","previous_headings":"QC Module","what":"Running on example data","title":"Process and analyze data for the COMBB project","text":"Create example data folder structure deployment setup_example_dir(). specify path parent_dir argument example created . Otherwise, example , creates example files within location specified tempdir(). place can call qc_deployment() example deployment stored paths$deployment also output files created. code work qc_deployment() throw error output already exists. run create fresh example directory : setup_example_dir(delete_old = TRUE)","code":"paths <- setup_example_dir()   print(paths) a <- qc_deployment(paths$deployment)"},{"path":"https://umasscds.github.io/BuzzardsBay/index.html","id":"output","dir":"","previous_headings":"QC Module > Running on example data","what":"Output","title":"Process and analyze data for the COMBB project","text":"qc_deployment() writes two identical CSV files, metadata file, HTML report deployment directory. Auto_QC_<deployment>.csv permanent record state process edited. Preliminary_QC_<deployment>.csv subsequent review editing. Preliminary_ dropped name review complete. Metadata_<deployment>.yml contains metadata written YAML file. QC_<deployment>_report.html contains plots summary information deployment. large file deleted QC complete. can recreated later make_deployment_report(deployment_dir) long Auto QC metadata files present.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/index.html","id":"analysis-module","dir":"","previous_headings":"","what":"Analysis Module","title":"Process and analyze data for the COMBB project","text":"Analysis Module consists three primary functions: stitch_site(), check_site(), report_site(). takes site path primary argument, /BB_Data/<year>/<site> e.g. \"~/BB_Data/2022/AB2\". additional function, extract_baywatchers(), applies sites given year. stitch_site() reads deployment files specified site year merges single file. Gaps deployments filled missing values (warning displayed gap greater 1 hour; may changed max_gap option, setting maximum gap (hours) accept silently. Three result files written /BB_Data/<year>/<site>/<combined>/: archive file, e.g., archive_AB2_2024.csv, columns values, including rejected data. Missing data represented blanks. file intended long-term storage complete set QC’d data. WPP file, e.g., WPP_AB2_2024.csv, columns. Rejected values replaced DR (“data rejected”). Missing data represented blanks. file format MassDEP wants. core file, e.g., core_AB2_2024.csv, selected columns. Rejected values missing values represented blanks. file used statistics graphs report, also intended sharing collaborators. stitch_site() can optionally run report_site() (use report = TRUE) stitch produce report site one call. extract_baywatchers extracts given year’s Baywatchers data Excel repository, must placed base directory (BB_data). check_site(), intended run time elapsed since running stitch_site(), checks see deployment files updated result data files changed (likely inadvertent editing). also checks missing files. site passes check_site(), result data files date. fails, result files report need recreated running stitch_site() . check_site also checks make sure data haven’t changed since recent report produced, checks sure extracted Baywatchers data date respect source Excel file. report_site() reads core file produced stitch_site() produces daily statistics file, e.g., combined\\daily_stats_AB2_2024.csv, seasonally summary statistics file, e.g., combined\\seasonal_stats_AB2_2024.csv, site report, combined\\site_report_AB2_2024.pdf. report_site() normally runs check_site() producing report throws error check fails; can override check = FALSE. don’t Baywatchers data site year, use baywatchers = FALSE. example data 2023/WH1X includes Baywatchers data.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/aggreg.html","id":null,"dir":"Reference","previous_headings":"","what":"Improved version of aggregate — aggreg","title":"Improved version of aggregate — aggreg","text":"Improve miserable aggregate function: ignore NAs return NA group Inf NaN warnings sort grouping variable optionally return result column optionally drop groups many NAs","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/aggreg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Improved version of aggregate — aggreg","text":"","code":"aggreg(x, by, FUN, drop_by = TRUE, nomiss = NULL)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/aggreg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Improved version of aggregate — aggreg","text":"x Vector aggregate Vector(s) group (1 grouping variable, list) FUN Function summarize drop_by TRUE, drop grouping variable just return vector; otherwise, return data frame nomiss NULL, represents proportion data group must non-missing; threshold met, result group NA","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/aggreg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Improved version of aggregate — aggreg","text":"Vector aggregated values (drop_by = TRUE), data frame groups aggregated values (drop_by = FALSE)","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/apply_timezone.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply at timezone to a date time string or object — apply_timezone","title":"Apply at timezone to a date time string or object — apply_timezone","text":"apply_timezone()  Takes date time text -- h:m:s separate \"timezone\" expressed offset UTC/GMT real timezone convert date-time object timezone.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/apply_timezone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply at timezone to a date time string or object — apply_timezone","text":"","code":"apply_timezone(dt, tz)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/apply_timezone.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply at timezone to a date time string or object — apply_timezone","text":"dt One date time strings e.g. \"2024-05-28 3:30:00\" date object made string without specifying timezone.  later case listed times timezone indicated tz, quite possibly defined timezone date time object correct. tz Either (1) \"timezone\" string expressing offset GMT e.g. \"GMT-4:00\"- format used HOBOware saved metadata object file, standard timezone; (2) standard time zone e.g. \"EDT\" appears calibrated files.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/apply_timezone.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply at timezone to a date time string or object — apply_timezone","text":"date time object defined timezone together locates observations correctly time (may local timezone).","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/apply_timezone.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply at timezone to a date time string or object — apply_timezone","text":"HOBOware configured log time based offset GMT. BuzzardsBay package stores \"timezone\", offset valid timezone. gets around adding offset hours defining timezone \"UTC\" - thus points correctly located time - local timezone. recent ONSET software uses valid time zone (\"EDT\") data processed software timezone recorded metadata. timezones apply_timezone() simply returns date-times dt tz specified. plotting convert string date-time object without specifying timezone ignore default (UTC) timezone thus use function. However, uses important times fully correctly defined. example looking correct sunrise sunset times, tide charts. uses actually important local timezone UTC offset applied fine, long resulting object correctly identifies data collected.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/bb_interactive_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Interactive logger data plot — bb_interactive_plot","title":"Interactive logger data plot — bb_interactive_plot","text":"See rmarkdown document included package example usage, found running: system.file(\"rmd/QAQC_report.Rmd\", package = \"BuzzardsBay\").","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/bb_interactive_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Interactive logger data plot — bb_interactive_plot","text":"","code":"bb_interactive_plot(   d,   dl,   focal_column,   jump_pattern,   focal_flag_pattern,   plot_label,   focal_flag_label = plot_label,   y_label,   threshold_values,   threshold_labels,   threshold_colors,   range_limit = c(NA, NA) )"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/bb_interactive_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Interactive logger data plot — bb_interactive_plot","text":"d Data frame logger data produced qc_deployment() dl Long version data. focal_column single column d jump_pattern Regular expression identify jump flags focal columns. focal_flag_pattern Regular expression identify flags focal columns plot_label Label plot. focal_flag_label Label focal flag, \" Flag\" appended. y_label Y axis label. threshold_values One threshold values plotted horizontal lines. threshold_labels labels (text) use threshold lines, one per threshold_value. threshold_colors color use threshold lines, can one color color threshold_value. range_limit plot range never exceed range - can restricted.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/bb_interactive_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Interactive logger data plot — bb_interactive_plot","text":"plotly plot object.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/bb_interactive_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Interactive logger data plot — bb_interactive_plot","text":"bb_interactive_plot() uses plotly package make interactive plot data Buzzard's Bay logger deployment.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/bb_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Set and retrieve BuzzardsBay package options — bb_options","title":"Set and retrieve BuzzardsBay package options — bb_options","text":"arguments Buzzards Bay parameters returned list. Use single character value retrieve value single option. Use one named arguments set options.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/bb_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set and retrieve BuzzardsBay package options — bb_options","text":"","code":"bb_options(...)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/bb_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set and retrieve BuzzardsBay package options — bb_options","text":"... One : one named arguments name option value new setting e.g. sal_max_jump = 0.75; single unnamed argument stating option retrieve e.g. \"sal_max_jump\". arguments, indicating options current settings returned list; single list argument named items new values.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/bb_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set and retrieve BuzzardsBay package options — bb_options","text":"arguments used options returned list. single, unnamed argument character value indicating option value option returned. Otherwise, arguments indicate new option settings nothing returned.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/bb_options.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set and retrieve BuzzardsBay package options — bb_options","text":"options: do_lv_duration, do_lv_range Low Variation Dissolved Oxygen (Dlv) flag. do_lv_range maximum difference maximum minimum values streak longer do_lv_duration minutes low variation dissolved oxygen (Dlv) flag set do_max_jump maximum difference consecutive readings jump dissolved oxygen (Dj) flag set. do_streak_duration, do_streak_min remains do_streak_min do_streak_duration Dissolved Oxygen low streak (Dls) flag set. logger_error_values One values indicate logger error.  setting multiple values YAML file use indented lines dash value:   Temperature (loggers), High Range, Raw checked value. Flags: TDe, TCe, , Re. max_hr, min_hr Thresholds high high range (Hh) low high range (Hl) flags. max_raw_do Threshold high raw (Rh) flag. max_temp, min_temp Thresholds high temperature (TDh, TCh) low temperature (TDl, TCl) plot_min_do, plot_max_do, plot_min_sal, plot_max_sal, plot_min_temp, plot_max_temp constrain Y range QC Report plots plotting Dissolved Oxygen (), Salinity (sal), temperature (temp) sal_lv_duration, sal_lv_range difference maximum minimum salinity remains sal_lc_range sal_lv_duration minutes low variation salinity (Slv) flag set. sal_max_jump maximum difference successive salinity records salinity jump (Sj) flag set involved records. min_depth, max_depth minimum maximum water depth. Depth column present falls outside range either Wl (water depth low) Wh (water depth high) flags thrown. Additionally 7 written Depth_QC either 9999  7 written Gen_QC depending high low respectively","code":"logger_error_values:   - -888.88   - 9999"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/bb_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set and retrieve BuzzardsBay package options — bb_options","text":"","code":"o <- bb_options()  cat(yaml::as.yaml(o)) #> do_lv_duration: 60.0 #> do_lv_range: 0.01 #> do_max_jump: 2.0 #> do_streak_duration: 60.0 #> do_streak_min: 0.5 #> logger_error_values: -888.88 #> max_depth: 9.0 #> max_hr: 55000.0 #> max_raw_do: 20.0 #> max_temp: 35.0 #> min_depth: 0.0 #> min_hr: 1000.0 #> min_temp: 5.0 #> plot_max_do: 20.0 #> plot_max_sal: 36.0 #> plot_max_temp: 31.0 #> plot_min_do: -0.5 #> plot_min_sal: 0.0 #> plot_min_temp: 0.0 #> sal_lv_duration: 60.0 #> sal_lv_range: 0.01 #> sal_max_jump: 0.75  bb_options(sal_max_jump = 0.5)  bb_options(\"sal_max_jump\") #> [1] 0.5  bb_options(o)  # Reset original options  bb_options(\"sal_max_jump\") #> [1] 0.75"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/bb_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make static plot of logger data — bb_plot","title":"Make static plot of logger data — bb_plot","text":"bb_plot() uses gplot2 generate plots logger data. primarily intended use reports. See rmarkdown document included package example usage, found running: system.file(\"rmd/QAQC_report.Rmd\", package = \"BuzzardsBay\").","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/bb_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make static plot of logger data — bb_plot","text":"","code":"bb_plot(   d,   dl,   focal_columns,   jump_pattern,   focal_flag_pattern,   err_pattern,   plot_label,   focal_flag_label = plot_label,   y_label,   threshold_values,   threshold_labels,   threshold_colors,   lat = NULL,   lon = NULL,   range_limit = c(NA, NA) )"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/bb_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make static plot of logger data — bb_plot","text":"d Data frame logger data produced qc_deployment() dl Long version data. focal_columns Names columns d plotted, max 2 comparable scales. jump_pattern Regular expression identify jump flags focal columns. focal_flag_pattern Regular expression identify flags focal columns err_pattern Regular expression identify flags indicate sensor error code (typically value -888.88) values excluded setting y axis range. plot_label Label plot. focal_flag_label Label focal flag, \" Flag\" appended. y_label Y axis label. threshold_values One threshold values plotted horizontal lines. threshold_labels labels (text) use threshold lines, one per threshold_value. threshold_colors color use threshold lines, can one color color threshold_value. lat, lon latitude longitude site, used calculate sunrise sunset times. range_limit plot range never exceed range - can restricted.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/bb_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make static plot of logger data — bb_plot","text":"ggplot plot object. Use print() turn plot/","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/check_placement.html","id":null,"dir":"Reference","previous_headings":"","what":"Check SN, site, deployment date, and logger type against placements table — check_placement","title":"Check SN, site, deployment date, and logger type against placements table — check_placement","text":"internal function verifies logger given SN placed expected, site, deployment date expected type.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/check_placement.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check SN, site, deployment date, and logger type against placements table — check_placement","text":"","code":"check_placement(sn, type, placements, deployment_date, site)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/check_placement.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check SN, site, deployment date, and logger type against placements table — check_placement","text":"sn logger serial number type logger type: \"\", \"Cond\" placements placements table deployment_date deployment date (end deployment window). deployment single dip water ending data download. site site logger deployed","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/check_placement.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check SN, site, deployment date, and logger type against placements table — check_placement","text":"informative error thrown something wrong. Nothing returned.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/check_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Check to be sure that result files from stitch_site are up to date — check_site","title":"Check to be sure that result files from stitch_site are up to date — check_site","text":"Check source files site year changed since stitch_site used create result files. Uses hash.txt, created check_site. Separately reports missing hash file, missing source result files, changed source result files.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/check_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check to be sure that result files from stitch_site are up to date — check_site","text":"","code":"check_site(site_dir, check_report = TRUE, check_baywatchers = TRUE)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/check_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check to be sure that result files from stitch_site are up to date — check_site","text":"site_dir Full path site data (.e., <base>/<year>/<site>). path must include QC'd results result files stitch_site. check_report TRUE, check see report date. check calling report_site, course. check_baywatchers TRUE, check see extracted Baywatchers data date respect source Baywatchers Excel file base data directory.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/check_site.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check to be sure that result files from stitch_site are up to date — check_site","text":"Silently returns TRUE validation successful.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/check_site.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check to be sure that result files from stitch_site are up to date — check_site","text":"Note check_site throw errors–simply tells wrong. calling function (currently, just report_site) can use silent return value throw appropriate errors.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/clean_csv_import_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean up column names for basic CSV input — clean_csv_import_names","title":"Clean up column names for basic CSV input — clean_csv_import_names","text":"clean_csv_import_names() internal function resolve variable input names canonical form.  work input columns names MX801 logger; U24 U26 loggers; using canonical names:  \"Date_Time\", \"Raw_DO\", \"Temp_DOLog\", \"\", \"DO_Pct_Sat\", \"High_Range\", \"Temp_CondLog\", \"Spec_Cond\", \"Salinity\", \"Depth\", \"Latitude\", \"Longitude\".  last three names optional.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/clean_csv_import_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean up column names for basic CSV input — clean_csv_import_names","text":"","code":"clean_csv_import_names(d)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/clean_csv_import_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean up column names for basic CSV input — clean_csv_import_names","text":"d data frame possibly non-standard names.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/clean_csv_import_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean up column names for basic CSV input — clean_csv_import_names","text":"data frame updated names.  Columns dropped re-ordered.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/clean_csv_import_names.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Clean up column names for basic CSV input — clean_csv_import_names","text":"combining names U24 U26 loggers use function two temperature columns manually renamed \"Temp_CondLog\", \"Temp_DOLog\".","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/combine_flags.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine the flags from individual ","title":"Combine the flags from individual ","text":"internal function called several times qc_deployment()","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/combine_flags.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine the flags from individual ","text":"","code":"combine_flags(d)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/combine_flags.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine the flags from individual ","text":"d data frame.  Columns \"flag\" name (ignoring case) exception column called \"Flags\" (case specific) concatenated return vector.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/combine_flags.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine the flags from individual ","text":"vector combined flags","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/create_parameter_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a BuzzardsBay parameter file — create_parameter_file","title":"Create a BuzzardsBay parameter file — create_parameter_file","text":"parameter file used set parameters affect flags calculated. See bb_options() parameter descriptions.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/create_parameter_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a BuzzardsBay parameter file — create_parameter_file","text":"","code":"create_parameter_file(dir, overwrite = FALSE)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/create_parameter_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a BuzzardsBay parameter file — create_parameter_file","text":"dir path directory write file generally either base directory data site directory. overwrite TRUE overwrite existing file.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/create_parameter_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a BuzzardsBay parameter file — create_parameter_file","text":"Nothing returned. file written disk","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/cut_path_items.html","id":null,"dir":"Reference","previous_headings":"","what":"cut items off the end of a path — cut_path_items","title":"cut items off the end of a path — cut_path_items","text":"cut items end path","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/cut_path_items.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cut items off the end of a path — cut_path_items","text":"","code":"cut_path_items(x, ncut)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/cut_path_items.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cut items off the end of a path — cut_path_items","text":"x path ncut number items cut","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/cut_path_items.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"cut items off the end of a path — cut_path_items","text":"shortened path","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/cut_path_items.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"cut items off the end of a path — cut_path_items","text":"","code":"if (FALSE) { # \\dontrun{   deployment_dir <- \"C:/temp/bb_demo//BB_Data/2023/RB1/2023-06-09\"   base_dir <- cut_path_items(deployment_dir, 3) } # }"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/daily_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce daily stats for a site — daily_stats","title":"Produce daily stats for a site — daily_stats","text":"Produces data frame daily stats.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/daily_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce daily stats for a site — daily_stats","text":"","code":"daily_stats(core)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/daily_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce daily stats for a site — daily_stats","text":"core Core data frame, produced stitch_site","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/daily_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce daily stats for a site — daily_stats","text":"Data frame one row day deployment, columns number statistics","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/extract_baywatchers.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract relevant Baywatchers data from ginormous Excel file — extract_baywatchers","title":"Extract relevant Baywatchers data from ginormous Excel file — extract_baywatchers","text":"Pulls relevant site, date, values Baywatchers source file given year. Rows DO_QC = 9 dropped. Rows missing times (column TIME) also dropped. results written <year>/baywatchers.csv, along hash file, bay_hash.txt.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/extract_baywatchers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract relevant Baywatchers data from ginormous Excel file — extract_baywatchers","text":"","code":"extract_baywatchers(   base_dir,   year,   file = \"bbcdataCURRENT.xlsx\",   header_line = 3 )"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/extract_baywatchers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract relevant Baywatchers data from ginormous Excel file — extract_baywatchers","text":"base_dir Path BB_Data base directory year Year extract data file File name Baywatchers Excel file. file must base directory. header_line Line Excel headers","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/extract_baywatchers.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract relevant Baywatchers data from ginormous Excel file — extract_baywatchers","text":"Run report_site want include two Baywatchers plots (run baywatchers = TRUE). needs run year (Baywatchers data updated). check_site check make sure baywatchers.csv date respect source Excel file.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/format_csv_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Format CSV date that might have been corrupted by excel — format_csv_date","title":"Format CSV date that might have been corrupted by excel — format_csv_date","text":"Excel US localization automatically convert dates year-month-day month/day/year.  Thus whenever date read CSV might edited Excel going check slashes assume month/day/year present.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/format_csv_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format CSV date that might have been corrupted by excel — format_csv_date","text":"","code":"format_csv_date(x)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/format_csv_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format CSV date that might have been corrupted by excel — format_csv_date","text":"x Dates character month/day/year year-month-day can mixed one vector.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/format_csv_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format CSV date that might have been corrupted by excel — format_csv_date","text":"Dates year-month-day (character)","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/format_csv_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format CSV date that might have been corrupted by excel — format_csv_date","text":"","code":"# example code if (FALSE) { # \\dontrun{ x <- c(NA, \"2024-05-15\", \"2024-05-16\", \"5/16/2024\") } # }"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/format_csv_date_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Format CSV date that might have been corrupted by excel — format_csv_date_time","title":"Format CSV date that might have been corrupted by excel — format_csv_date_time","text":"Excel US localization automatically convert dates year-month-day month/day/year.  Thus whenever date read CSV might edited Excel going check slashes assume month/day/year present.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/format_csv_date_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format CSV date that might have been corrupted by excel — format_csv_date_time","text":"","code":"format_csv_date_time(x, format = \"datetime\")"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/format_csv_date_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format CSV date that might have been corrupted by excel — format_csv_date_time","text":"x Date times character month/day/year h:m year-month-day h:m can mixed one vector.  h:m:s also acceptable place h:m","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/format_csv_date_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format CSV date that might have been corrupted by excel — format_csv_date_time","text":"Dates year-month-day (character)","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/format_csv_date_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Format CSV date that might have been corrupted by excel — format_csv_date_time","text":"","code":"# example code if (FALSE) { # \\dontrun{ x <- c(NA, \"2024-05-15\", \"2024-05-16\", \"5/16/2024\") } # }"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/format_date_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to reformat the date time date from Details.txt — format_date_time","title":"Internal function to reformat the date time date from Details.txt — format_date_time","text":"Internal function reformat date time date Details.txt","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/format_date_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to reformat the date time date from Details.txt — format_date_time","text":"","code":"format_date_time(x)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/format_date_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Internal function to reformat the date time date from Details.txt — format_date_time","text":"x Date time  month/day/year h:m:s GMT-offset format Note returns string date time object, GMT offset dropped. string processed date time object timezone likely wrong explicitly set.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/format_date_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Internal function to reformat the date time date from Details.txt — format_date_time","text":"String year-month-day h:m:s format.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/format_date_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Internal function to reformat the date time date from Details.txt — format_date_time","text":"","code":"if (FALSE) { # \\dontrun{ x <- \"06/10/19 08:05:37  GMT-04:00\" format_date_time(x) } # }"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_cond_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve information from a conductivity calibration details file — get_cond_details","title":"Retrieve information from a conductivity calibration details file — get_cond_details","text":"get_cond_details() extracts specific subset information stored details file generated HOBOware conductivity/salinity calibration.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_cond_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve information from a conductivity calibration details file — get_cond_details","text":"","code":"get_cond_details(path)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_cond_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve information from a conductivity calibration details file — get_cond_details","text":"path path details file created HOBOware conductivity calibration.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_cond_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve information from a conductivity calibration details file — get_cond_details","text":"nested list containing small subset information file.","code":""},{"path":[]},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_cond_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve information from a conductivity calibration details file — get_cond_details","text":"","code":"file <- system.file(    \"extdata/2023/RB1/2023-06-09/Calibrated/Cond_RB1_2023-06-09_Details.txt\",                      package = \"BuzzardsBay\")  do_cal  <- get_cond_details(file)  cat(yaml::as.yaml(do_cal)) #> cond_calibration: #>   calibration_points: Start point and End point #>   start_cal_cond: 40768.0 #>   start_cal_temp: 21.1 #>   start_cal_time: 06/02/23 11:10:00 AM GMT-04:00 #>   end_cal_cond: 39200.0 #>   end_cal_temp: 17.8 #>   end_cal_time: 06/09/23 12:40:00 PM GMT-04:00 #> cond_deployment: #>   full_series_name: Salinity, ppt #>   launch_name: BBC3_RB1_20636185 #>   launch_time: 06/01/23 14:41:47  GMT-04:00 #>   logging_interval: 00 Hr 10 Min 00 Sec #>   logging_interval_min: 10.0 #> cond_device: #>   product: HOBO U24-002 Conductivity #>   serial_number: 20636185 #>   version_number: 1.52 #>   header_created: 06/10/19 08:05:37  GMT-04:00"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_do_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve information stored a Dissolved Oxygen calibration details file — get_do_details","title":"Retrieve information stored a Dissolved Oxygen calibration details file — get_do_details","text":"get_do_details() extracts specific subset information stored details file generated HOBOware calibration.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_do_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve information stored a Dissolved Oxygen calibration details file — get_do_details","text":"","code":"get_do_details(path)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_do_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve information stored a Dissolved Oxygen calibration details file — get_do_details","text":"path path details file created HOBOware calibration.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_do_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve information stored a Dissolved Oxygen calibration details file — get_do_details","text":"nested list containing small subset information file.","code":""},{"path":[]},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_do_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve information stored a Dissolved Oxygen calibration details file — get_do_details","text":"","code":"file <- system.file(    \"extdata/2023/RB1/2023-06-09/Calibrated/DO_RB1_2023-06-09_Details.txt\",                      package = \"BuzzardsBay\")  do_cal  <- get_do_details(file)  cat(yaml::as.yaml(do_cal)) #> do_calibration: #>   start_time: 06/02/23 11:10:00 AM GMT-04:00 #>   start_do_conc: 7.37 #>   start_temperature_c: 22.0 #>   start_salinity_ppt: 28.47 #>   start_meter_titration_value_mg_l: 6.41 #>   start_salinity_correction: 0.8475 #>   end_time: 06/09/23 12:40:00 PM GMT-04:00 #>   end_do_conc: 9.12 #>   end_temperature_c: 18.1 #>   end_meter_titration_value_mg_l: 7.62 #> do_deployment: #>   full_series_name: DO Adj Conc , mg/L #>   launch_name: BBC3_RB1_20659182 #>   launch_time: 06/01/23 14:16:43  GMT-04:00 #>   logging_interval: 00 Hr 10 Min 00 Sec #>   calibration_date: 05/16/23 17:04:40  GMT-04:00 #>   calibration_gain: 1.07718 #>   calibration_offset: -0.02045 #>   logging_interval_min: 10.0 #> do_device: #>   product: HOBO U26-001 Dissolved Oxygen #>   serial_number: 20659182 #>   version_number: 1.08 #>   header_created: 03/02/12 14:19:05  GMT-04:00"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_expected_columns.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up expected column names and order — get_expected_columns","title":"Look up expected column names and order — get_expected_columns","text":"get_expected_columns() looks column names order expected different points data pipeline.  columns set expected_columns list object.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_expected_columns.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up expected column names and order — get_expected_columns","text":"","code":"get_expected_columns(type, existing = character(0))"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_expected_columns.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up expected column names and order — get_expected_columns","text":"type type (point along data pipeline) names , currently one calibrated  output import_calibrated_data() intermediate  intermediate QC process includes individual flag columns qc_final  output qc_deployment() final_all complete set columns final files, used archive result file final_WPP columns WPP result file final_core columns core result file final_sensors columns representing sensors WPP result file; may set \"DR\" rejected QC existing vector existing column names. used determine optional column names present","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_expected_columns.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up expected column names and order — get_expected_columns","text":"list expected names (including optional names present) canonical order.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_expected_columns.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Look up expected column names and order — get_expected_columns","text":"step process required optional names function handles fuzziness two - returning final set column names, canonical order. function uses lists column names defined separately R/expected_column_names.R. Edit list change output. Note optional names four final_* result files.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_file_hashes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get md5 hashes for a vector of files — get_file_hashes","title":"Get md5 hashes for a vector of files — get_file_hashes","text":"Given one file paths names, return md5 hashes . Returns NA files exist.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_file_hashes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get md5 hashes for a vector of files — get_file_hashes","text":"","code":"get_file_hashes(files)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_file_hashes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get md5 hashes for a vector of files — get_file_hashes","text":"files list full file specifications","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_file_hashes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get md5 hashes for a vector of files — get_file_hashes","text":"matching vector md5 hashes","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_site_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the full site name for a site — get_site_name","title":"Get the full site name for a site — get_site_name","text":"Pulls full site name sites table.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_site_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the full site name for a site — get_site_name","text":"","code":"get_site_name(site_dir)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_site_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the full site name for a site — get_site_name","text":"site_dir Site directory","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_site_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the full site name for a site — get_site_name","text":"Full name site","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_tide_height.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the tide height at a particular station corresponding to a series of date, times. Note due to limitations in the rtide package this only works for about a third of the Buzzards Bay NOAA tide stations. — get_tide_height","title":"Get the tide height at a particular station corresponding to a series of date, times. Note due to limitations in the rtide package this only works for about a third of the Buzzards Bay NOAA tide stations. — get_tide_height","text":"get_tide_height() wrapper rtide::tide_height() works date time vector also checks station tide_station_info.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_tide_height.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the tide height at a particular station corresponding to a series of date, times. Note due to limitations in the rtide package this only works for about a third of the Buzzards Bay NOAA tide stations. — get_tide_height","text":"","code":"get_tide_height(dt, station)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_tide_height.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the tide height at a particular station corresponding to a series of date, times. Note due to limitations in the rtide package this only works for about a third of the Buzzards Bay NOAA tide stations. — get_tide_height","text":"dt Series date-time values POSIXct. timezone must properly set. station station name station ID appears tide_station_info.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/get_tide_height.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the tide height at a particular station corresponding to a series of date, times. Note due to limitations in the rtide package this only works for about a third of the Buzzards Bay NOAA tide stations. — get_tide_height","text":"series tide heights corresponding date-times dt Heights meters , think, relative MLLW (Mean Lower Low  Water). Although, find stated individual stations stations general. See example datum information PENIKESE ISLAND MA, states \"NOTICE: data values relative MLLW.\".","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/import_calibrated_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Import Calibrated Deployment Data — import_calibrated_data","title":"Import Calibrated Deployment Data — import_calibrated_data","text":"function imports calibrated data single deployment Calibrated sub directory. import_calibrated_data() calls distinct functions (import types) depending  devices associated deployment placements.csv called functions internal package naming structure import_calibrated_data_[x] [x] integer.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/import_calibrated_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import Calibrated Deployment Data — import_calibrated_data","text":"","code":"import_calibrated_data(paths, devices)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/import_calibrated_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import Calibrated Deployment Data — import_calibrated_data","text":"paths Path list returned lookup_paths().  import_types component used . devices Device information list returned lookup_devices().","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/import_calibrated_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import Calibrated Deployment Data — import_calibrated_data","text":"list two items first d data frame calibrated data containing following columns. Date_Time date time observation string format yyyy-mm-dd hh:mm:ss Raw_DO Uncalibrated (measured) Dissolved Oxygen mg/L Temp_DOLog Temperature Deg. Celsius recorded logger calibrated (salinity adjusted) Dissolved Oxygen mg/L DO_Pct_Sat Dissolved oxygen percent saturation (calibrated) Salinity_DOLog Salinity recorded logger ppt (parts per thousand), equivalent PSU (Practical Salinity Units) High_Range High Range Conductivity microsiemens per cm. Note newer loggers may call column \"Electrical Conductivity\" thing, even loggers called High_Range throughout QC workflow. Temp_CondLog Temperature Deg. Celsius recorded conductivity logger Spec_Cond specific conductivity (new loggers) specific conductance (older loggers) microsiemens per cm. Salinity Salinity recorded Conductivity logger ppt (parts per thousand), equivalent PSU (Practical Salinity Units) units assigned newer loggers","code":""},{"path":[]},{"path":"https://umasscds.github.io/BuzzardsBay/reference/import_calibrated_data.html","id":"import-type-csv","dir":"Reference","previous_headings":"","what":"Import Type 0 - CSV","title":"Import Calibrated Deployment Data — import_calibrated_data","text":"simple CSV import fallback case updates HOBOware loggers break targeted imports. expects CSV file YAML (.yml) file. use import: Make sure import_types.csv default line: default,0 means import type identified model listed placement CSV import used. placments.csv want use CSV import use model name import_types.csv default CSV import used. recommend using model name -CSV appended; e.g. instead MX801 use MX801-CSV. deployment's Calibrated directory create appropriate CSV YAML file described .","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/import_calibrated_data.html","id":"csv-file","dir":"Reference","previous_headings":"","what":"CSV file","title":"Import Calibrated Deployment Data — import_calibrated_data","text":"CSV file columns resolved name order import attempt resolve several different column naming conventions. following work: canonical column names used package:  \"Date_Time\", \"Raw_DO\", \"Temp_DOLog\", \"\", \"DO_Pct_Sat\", \"High_Range\", \"Temp_CondLog\", \"Spec_Cond\", \"Salinity\", \"Depth\", \"Latitude\", \"Longitude\". last three optional, rest required. Columns names MX801 logger. example saving first sheet CSV. Column names U24 U26 loggers. However, combining data two loggers single CSV two temperature columns manually renamed \"Temp_CondLog\", \"Temp_DOLog\" otherwise indistinguishable. using column names please verify carefully","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/import_calibrated_data.html","id":"yaml-file","dir":"Reference","previous_headings":"","what":"YAML file","title":"Import Calibrated Deployment Data — import_calibrated_data","text":"YAML file following items required: calibration_start: date time start deployment. field calibrated sensors (U24, U26) also calibration time. factory calibrated sensors (MX801) calibration time. calibration_end: , end deployment /calibrated window. timezone: timezone reported logger /calibration software. output HOBOware uses GMT offset like \"GMT-04:00\", broadly supported timezone accepted . MX801 uses timezone code \"EST\" also accepted . do_device: Information sensor logger items: product: dissolved oxygen sensor e.g. \"HOBO U26-001 Dissolved Oxygen\", \"U26-01\", \"MX801\". serial_number: device serial number. cond_device: List information conductivity sensor items: product: conductivity sensor e.g. \"HOBO U24-002 Conductivity\" serial_number: Conductivity sensor serial number Additional items appear metadata documentation permitted retained. Items appear document ignored.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/import_calibrated_data.html","id":"import-type-u-u-","dir":"Reference","previous_headings":"","what":"Import Type 1 - U24, U26","title":"Import Calibrated Deployment Data — import_calibrated_data","text":"HOBOware derived U24 U26 loggers. Import type 1 expects find two CSV files two details.txt files calibration directory. Dissolved Oxygen files \"Do_\" somewhere names Conductivity files either \"Cond_\" \"Sal_ names.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/import_calibrated_data.html","id":"import-type-mx-","dir":"Reference","previous_headings":"","what":"Import Type 2 - MX801","title":"Import Calibrated Deployment Data — import_calibrated_data","text":"import type MX801 logger, expects single .xlxs file  combined data loggers first sheet details (metadata) third sheet. Note still two lines placement  placements.csv one \"\" \"Cond\" indicate \"MX801\" model Serial Number.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/is_daylight.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if observation correspond to daylight hours or not — is_daylight","title":"Determine if observation correspond to daylight hours or not — is_daylight","text":"Determine observation correspond daylight hours ","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/is_daylight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if observation correspond to daylight hours or not — is_daylight","text":"","code":"is_daylight(dt, lat, lon, tz)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/is_daylight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if observation correspond to daylight hours or not — is_daylight","text":"dt vector date times either text date time objects lat, lon latitude longitude associated site. tz HOBOware style GMT offset used define \"timezone\" dates dt. Probably always \"GMT-4:00\" use value saved metadata file.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/is_daylight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if observation correspond to daylight hours or not — is_daylight","text":"date time object dates dt converted UTC timezone correctly set object.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/longest_duration.html","id":null,"dir":"Reference","previous_headings":"","what":"Give duration of the longest run of low DO for each day — longest_duration","title":"Give duration of the longest run of low DO for each day — longest_duration","text":"Finds longest run threshold day.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/longest_duration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give duration of the longest run of low DO for each day — longest_duration","text":"","code":"longest_duration(x)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/longest_duration.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give duration of the longest run of low DO for each day — longest_duration","text":"x data frame three columns: Date date, format 2024-05-30 Date_Time date time, format 2024-05-30 16:20:00 trigger TRUE selected threshold (name column varies)","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/longest_duration.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Give duration of the longest run of low DO for each day — longest_duration","text":"Length longest run TRUEs fractional hours","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/longest_duration.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Give duration of the longest run of low DO for each day — longest_duration","text":"Looks previous day start runs, many low-events start evening. Reported durations longer 24 hours. trigger false day, result 0. trigger NA day, result NA.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/lookup_devices.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup the DO and conductivity logger device models — lookup_devices","title":"Lookup the DO and conductivity logger device models — lookup_devices","text":"Given deployment date site lookup sensors deployed . assumption \"\" \"Cond\" device type associated placement function throw error violated specified deployment.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/lookup_devices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup the DO and conductivity logger device models — lookup_devices","text":"","code":"lookup_devices(site, deployment_date, placements)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/lookup_devices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup the DO and conductivity logger device models — lookup_devices","text":"site site logger deployed deployment_date deployment date (end deployment window). deployment single dip water ending data download. placements placements table","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/lookup_devices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup the DO and conductivity logger device models — lookup_devices","text":"list items: do_model,do_sn Dissolved oxygen sensor model serial number cond_model,cond_sn Conductivity sensor model serial number","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/lookup_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Lookup paths for data and parameter files — lookup_paths","title":"Lookup paths for data and parameter files — lookup_paths","text":"includes paths relate deployment, site, year, entire data base.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/lookup_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lookup paths for data and parameter files — lookup_paths","text":"","code":"lookup_paths(   base_dir = NULL,   year = NULL,   site = NULL,   deployment_date = NULL,   deployment_dir = NULL )"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/lookup_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lookup paths for data and parameter files — lookup_paths","text":"base_dir base directory data. year four digit year paths looked site site name paths looked deployment_date deployment date form yyyy-mm-dd, yyyy four digit year, mm two digit month dd two digit day.  Single digit components padded e.g. 01 January. deployment_dir (optional) full path deployment's directory. deployment_dir used, arguments ignored instead values inferred path.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/lookup_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lookup paths for data and parameter files — lookup_paths","text":"list paths related non-path variables.  items returned always order inputs deployment specific items defined NA values. list items contain single string. base_dir path base directory data. year_dir path specific year's directory site_dir path specific site's directory md_dir path metadata  / parameter directory. Containing additional information sites placements given year deployment_dir path deployment directory data (raw, calibrated, QC'd) deployment stored.  deployment period device continuously water preceding data download device, typically week project. deployment_cal_dir deployment calibration directory path deployment_auto_qc deployment Auto QC file path file created qc_deployment() permanent record output automated QC process. modified. deployment_prelim_qc preliminary QC file. created qc_deployment() intended edited people AC process , completion process delete \"preliminary_\" beginning name. deployment_final_qc final QC file created deployment_prelim_qc people performing QC. deployment_metadata file contains metadata HOBOware Details files generated qc_deployment(). deployment_report html report plots inform QC process. preceding_auto_qc path auto QC file preceding deployment exists, NA otherwise. sites CSV file sites associated information. sites file  maintained users. placements CSV tracking placements.  placement period specific device site. placements file maintained users. import_types File connecting device models (placements file) import type, integer, used import calibrated data derived device models import type must supported function named import_calibrated_data_{type}. type integer. See example import_calibrated_data_1 handles CSV output HOBOware. public function import_calibrated_data() handles dispatch numbered functions additional formatting checking output. global_parameters YAML (.yml) file sets global parameters BuzzardsBay package, affect flags calculated.  See update_bb_parameters site_parameters YAML takes precedence global_parameters allows adjusting particular site year path four digit year character format deployment_date path. deployment date character yyyy-mm-dd format.  Numbers padded e.g. 01 January. site path. site name. case sensitive appear exactly sites table (sites).","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/lookup_paths.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Lookup paths for data and parameter files — lookup_paths","text":"easiest way call specify deployment directory (deployment_dir) case arguments inferred path. Otherwise specify minimum base_dir, year, site; , optionally deployment_date paths can specified .","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/lookup_site_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up paths for a specified site — lookup_site_paths","title":"Look up paths for a specified site — lookup_site_paths","text":"Find return paths deployment directories, metadata files, final QC files selected year site.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/lookup_site_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up paths for a specified site — lookup_site_paths","text":"","code":"lookup_site_paths(site_dir, warn = FALSE)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/lookup_site_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up paths for a specified site — lookup_site_paths","text":"site_dir Full path site data (.e., <base>/<year>/<site>); path must include QC'd results warn TRUE, chatter missing files just drop ; otherwise throw error","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/lookup_site_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up paths for a specified site — lookup_site_paths","text":"named list consisting : sites full path site info table deployments data frame row deployment, columns date, QCpath, md_path, hash, containing date deployment, full path final QC'd data, full path deployment metadata file, md5 hash QC'd data file.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_deployment_report.html","id":null,"dir":"Reference","previous_headings":"","what":"Make QAQC report for a deployment — make_deployment_report","title":"Make QAQC report for a deployment — make_deployment_report","text":"make_deployment_report() make html report use conducting quality assurance quality control (QAQC) deployment.  uses \"Auto_QC\" CSV file generated \"qc_deployment()\".","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_deployment_report.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make QAQC report for a deployment — make_deployment_report","text":"","code":"make_deployment_report(dir, quiet = FALSE)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_deployment_report.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make QAQC report for a deployment — make_deployment_report","text":"dir deployment directory quiet Set TRUE less chatter. Passed rmarkdown::render().","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_deployment_report.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make QAQC report for a deployment — make_deployment_report","text":"Invisibly returns path QC report","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_deployment_report.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make QAQC report for a deployment — make_deployment_report","text":"output \".html\" file exists rewritten.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_deployment_report.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make QAQC report for a deployment — make_deployment_report","text":"","code":"if (FALSE) { # \\dontrun{  example_paths <- setup_example_dir() dir <- example_paths$deployment qc_deployment(dir, report = FALSE) report_path <-  make_deployment_report(dir) } # }"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_facet_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a paired time series plot of DO and Temperature for the final report — make_facet_plot","title":"Produce a paired time series plot of DO and Temperature for the final report — make_facet_plot","text":"Produce paired time series plot Temperature final report. Unlike make_plot, function specific single plot.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_facet_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a paired time series plot of DO and Temperature for the final report — make_facet_plot","text":"","code":"make_facet_plot(daily)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_facet_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a paired time series plot of DO and Temperature for the final report — make_facet_plot","text":"daily daily data frame, report_site","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_facet_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a paired time series plot of DO and Temperature for the final report — make_facet_plot","text":"ggplot2 object","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a time series plot for the final report — make_plot","title":"Produce a time series plot for the final report — make_plot","text":"Produce time series plot final report. Values plotted small points, specified data, x y columns, axis labels. horizontal line can optionally plotted.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a time series plot for the final report — make_plot","text":"","code":"make_plot(   core = core,   x = core$Date_Time,   y,   x_lab,   y_lab,   hline = 0,   diag = FALSE,   point_size = 0.25,   linetype = 0,   vline = NULL )"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a time series plot for the final report — make_plot","text":"core Core data frame, produced stitch_site x X variable, typically Date_Time y Y variable x_lab Label x-axis y_lab Label y-axis hline Optional horizontal line specified value y-axis diag TRUE, set x y axes range draw diagonal slope 1 point_size Optional size points plot linetype Optional line type (default 0, line)","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a time series plot for the final report — make_plot","text":"ggplot2 object","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_plot_2var.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce a time series plot with two datasets for the final report — make_plot_2var","title":"Produce a time series plot with two datasets for the final report — make_plot_2var","text":"Produce time series plot final report includes 2 sets variables. Values first set plotted small black points, second set larger red points, plotted top first.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_plot_2var.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce a time series plot with two datasets for the final report — make_plot_2var","text":"","code":"make_plot_2var(data1, data2, x1, y1, x2, y2, x_lab, y_lab)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_plot_2var.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce a time series plot with two datasets for the final report — make_plot_2var","text":"data1 Second dataset x1 Second X variable y1 Second Y variable x_lab Label x-axis y_lab Label y-axis","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/make_plot_2var.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce a time series plot with two datasets for the final report — make_plot_2var","text":"ggplot2 object","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/mean_daily_durations.html","id":null,"dir":"Reference","previous_headings":"","what":"Give mean duration of low-DO runs in hours — mean_daily_durations","title":"Give mean duration of low-DO runs in hours — mean_daily_durations","text":"Returns means runs specified threshold hours. Days (noon-noon) threshold excluded. use noon noon low-runs typically start evening. Multiple day-runs included means. Runs 6 fewer NAs surrounded threshold treated threshold.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/mean_daily_durations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Give mean duration of low-DO runs in hours — mean_daily_durations","text":"","code":"mean_daily_durations(x, threshold)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/mean_daily_durations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Give mean duration of low-DO runs in hours — mean_daily_durations","text":"x data frame three columns: x Data frame Date, Date_Time, threshold Low-threshold","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/mean_daily_durations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Give mean duration of low-DO runs in hours — mean_daily_durations","text":"Mean length low-runs days low , hours","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/parse_hoboware_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Read HOBOware details file — parse_hoboware_details","title":"Read HOBOware details file — parse_hoboware_details","text":"Read HOBOware details file parse nested list.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/parse_hoboware_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read HOBOware details file — parse_hoboware_details","text":"","code":"parse_hoboware_details(path)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/parse_hoboware_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read HOBOware details file — parse_hoboware_details","text":"path path HOBOware details file created calibrating.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/parse_hoboware_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read HOBOware details file — parse_hoboware_details","text":"nested list file contents.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/parse_hoboware_details.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read HOBOware details file — parse_hoboware_details","text":"HOBOware details file contains data sensor, deployment, calibration process. Indentation level used indicate hierarchy data. parse_hoboware_details() parses file list captures structure. approach taken little bit kludge seems working files produced Conductivity loggers. parse_hoboware_details() first edits details text can parsed YAML R nested list. resulting list cleaned eliminating spaces weird characters list item names (values) dropping redundant nesting.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/parse_hoboware_details.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Read HOBOware details file — parse_hoboware_details","text":"sample numbers details files include commas (e.g 1,283 ) trip YAML conversion.  eliminated targeted fashion - dropping commas digits lines \"Max:\", \"Min:\", \"Avg:\", \"Std Dev:\" \"Samples:\". output files might need expanded cover file, given commas potential delineate items list surgical approach used. conductivity details files values separated field names \"=\" instead \":\", used file. process items correctly \" = \" replaced \": \" parsing YAML.  might create unintended consequences fields HOBOware output, adversely affect fields extracted package, get_do_details() get_cond_details(). parse_hoboware_details() primarily intended internal package use","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/parse_hoboware_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read HOBOware details file — parse_hoboware_details","text":"","code":"file <- system.file(    \"extdata/2023/RB1/2023-06-09/Calibrated/DO_RB1_2023-06-09_Details.txt\",                      package = \"BuzzardsBay\")  hwd <- parse_hoboware_details(file)  str(hwd, max.level = 2) #> List of 8 #>  $ Series_DO_conc_mg_per_L    :List of 3 #>   ..$ Devices          :List of 1 #>   ..$ Deployment_Info  :List of 11 #>   ..$ Series_Statistics:List of 7 #>  $ Series_Temp_C              :List of 3 #>   ..$ Devices          :List of 1 #>   ..$ Deployment_Info  :List of 8 #>   ..$ Series_Statistics:List of 7 #>  $ Series_DO_Adj_Conc_mg_per_L:List of 4 #>   ..$ Devices                              :List of 1 #>   ..$ Deployment_Info                      :List of 11 #>   ..$ Series_Statistics                    :List of 7 #>   ..$ Dissolved_Oxygen_Assistant_Parameters:List of 24 #>  $ Series_DO_Percent_pct      :List of 4 #>   ..$ Devices                              :List of 1 #>   ..$ Deployment_Info                      :List of 11 #>   ..$ Series_Statistics                    :List of 7 #>   ..$ Dissolved_Oxygen_Assistant_Parameters:List of 24 #>  $ Series_Salinity_ppt        :List of 3 #>   ..$ Devices          :List of 1 #>   ..$ Deployment_Info  :List of 8 #>   ..$ Series_Statistics:List of 7 #>  $ Event_Type_Coupler_Attached:List of 3 #>   ..$ Devices          :List of 1 #>   ..$ Deployment_Info  :List of 6 #>   ..$ Series_Statistics:List of 3 #>  $ Event_Type_Stopped         :List of 3 #>   ..$ Devices          :List of 1 #>   ..$ Deployment_Info  :List of 6 #>   ..$ Series_Statistics:List of 3 #>  $ Event_Type_End_Of_File     :List of 3 #>   ..$ Devices          :List of 1 #>   ..$ Deployment_Info  :List of 6 #>   ..$ Series_Statistics:List of 3   # These are of particular interest  hwd$Series_DO_Adj_Conc_mg_per_L$Dissolved_Oxygen_Assistant_Parameters |>    yaml::as.yaml() |>    cat() #> Performing_Field_Calibration: .na #> Using_start_cal_point: .na #> Start_time: 06/02/23 11:10:00 AM GMT-04:00 #> Start_DO_conc: 7.37 #> Start_temperature_C: 22.0 #> Start_salinity_ppt: 28.47 #> Start_meter_per_titration_value_mg_per_L: 6.41 #> Start_salinity_correction: 0.8475 #> Using_end_cal_point: .na #> End_time: 06/09/23 12:40:00 PM GMT-04:00 #> End_DO_conc: 9.12 #> End_temperature_C: 18.1 #> End_salinity_ppt: 28.47 #> End_meter_per_titration_value_mg_per_L: 7.62 #> End_salinity_correction: 0.8382 #> Adjust_for_Salinity_selected: .na #> Salinity_datafile: Y:\\BAYWATCHERS\\HOBO dataloggers\\RB1\\Deployments_RBH\\2023\\6_9_2023\\Calibrated #>   Data\\RB1_SpecCon_6_9_2023_AH.txt #> Overlap_mode: Option 1 #> Barometric_Pressure_selected: .na #> Pressure_value_atm: 1.0 #> Elevation_m: 0.0 #> Reporting_data_between_selected_points_only: .na #> Start: Field cal reference start #> End: Field cal reference end"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/parse_mx801_details.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract specific metadata items from the MX801 details sheet — parse_mx801_details","title":"Extract specific metadata items from the MX801 details sheet — parse_mx801_details","text":"internal helper function extract MX801 details (metadata) third sheet Excel file.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/parse_mx801_details.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract specific metadata items from the MX801 details sheet — parse_mx801_details","text":"","code":"parse_mx801_details(file)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/parse_mx801_details.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract specific metadata items from the MX801 details sheet — parse_mx801_details","text":"file path calibrated Excel (.xlsx) file MX801 logger","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/parse_mx801_details.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract specific metadata items from the MX801 details sheet — parse_mx801_details","text":"nested list selected metadata details","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/parse_mx801_details.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract specific metadata items from the MX801 details sheet — parse_mx801_details","text":"parse_mx801_details() kludgy data written details file fairly haphazard way. approach bunch formatting text details file make somewhat YAML like, parse YAML, little cleanup extraction. description output metadata fields.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/parse_mx801_details.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract specific metadata items from the MX801 details sheet — parse_mx801_details","text":"","code":"# parse_mx801_details() is an internal function so example code will # only work after devtools::load_all() if (FALSE) { # \\dontrun{  p <- setup_example_dir(site_filter = \"BBC\", year_filter = 2025,  deployment_filter = \"2025-01-04\") f <- list.files(file.path(p$deployment, \"Calibrated\"),                 pattern =  \".xlsx$\", full.names  = TRUE ) md <- parse_mx801_details(f) yaml::as.yaml(md) |> cat(sep = \"\\n\") } # }"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/plot_tide_sun.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot tide height and daylight hours — plot_tide_sun","title":"Plot tide height and daylight hours — plot_tide_sun","text":"plot_tide_sun()  Creates plot vertical background stripes indicating daylight hours line indicating tide height.  Due limitation rtide work Buzzards Bay tide stations.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/plot_tide_sun.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot tide height and daylight hours — plot_tide_sun","text":"","code":"plot_tide_sun(d, station, lat, lon, tz)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/plot_tide_sun.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot tide height and daylight hours — plot_tide_sun","text":"d data frame containing data companion Daylight Tide height plot needed.  column Date_Time used assumed interval observations consistent file. station tide station name plot made lat, lon latitude longitude site - used daylight hour calculations. tz HOBOware style \"timezone\" associated Date_Time column e.g. \"GMT-4:00\".  Note, general BuzzardsBay package Date Time objects stored string \"2024-05-31 6:00:00\"  converted POSIX object WITHOUT defined timezone.  \"Timezone\" used HOBOware saved metadata object offset GMT/UTC TRUE timezone.  Passing offset tz allows local date times converted UTC equivalent UTC timezone set represent accurate time + timezone use tide chart daylight hour lookup.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/qc_deployment.html","id":null,"dir":"Reference","previous_headings":"","what":"Run automatic quality control on a deployment — qc_deployment","title":"Run automatic quality control on a deployment — qc_deployment","text":"qc_deployment() : Read calibrated dissolved oxygen conductivity output HOBOware. Read parse associated Details file. Reformat merge data files. Add automatic flags, create columns manual QC Write data metadata. report = TRUE call make_deployment_report() make interactive HTML report plots QAQC.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/qc_deployment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run automatic quality control on a deployment — qc_deployment","text":"","code":"qc_deployment(dir, report = TRUE)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/qc_deployment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run automatic quality control on a deployment — qc_deployment","text":"dir path deployment directory run QC .  Calibration/ directory calibrated conductivity data associated Details files generated HOBOware. report TRUE (default) html report generated plots assist QAQC process.  Set FALSE skip generating report. See make_deployment_report() explicitly make report separate step.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/qc_deployment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run automatic quality control on a deployment — qc_deployment","text":"list items: d final tabular data written disk. md nested list metadata.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/qc_deployment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run automatic quality control on a deployment — qc_deployment","text":"qc_deployment() assumes files arranged specific file structure.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/qc_deployment.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Run automatic quality control on a deployment — qc_deployment","text":"qc_deployment() calls import_calibrated_data() currently supports three completely different import functions.  See import_calibrated_data() documentation data formats expect. cases input files looked within Calibration sub directory deployment directory (dir).","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/qc_deployment.html","id":"supported-import-types","dir":"Reference","previous_headings":"","what":"Supported import types","title":"Run automatic quality control on a deployment — qc_deployment","text":"currently 3 separate import functions handle different formats data. : 0 - Basic CSV Import import requires CSV file YAML (.yml) file. intended fall back / future proof import supper simple format. work input columns names Hoboware creates calibrating MX801 logger U24 U26 loggers; well canonical names:  \"Date_Time\", \"Raw_DO\", \"Temp_DOLog\", \"\", \"DO_Pct_Sat\", \"High_Range\", \"Temp_CondLog\", \"Spec_Cond\", \"Salinity\", \"Depth\", \"Latitude\", \"Longitude\".  last three columns (Depth, Latitude, Longitude) optional. Note: combining data U24 U26 loggers single sheet use function two temperature columns manually renamed \"Temp_CondLog\", \"Temp_DOLog\". YAML file look something like :   1 - U24 U26 loggers first import supported BuzzardsBay package. two loggers (U24 U26) used record salinity dissolved oxygen data. expects two CSV (ending .csv) files along two details files (ending details.txt). One file type contain DO_ somewhere name indicating dissolved oxygen logger; one file type contain either SAL_ COND_ name indicating salinity/conductivity logger. naming requirements case sensitive. 2 - MX801 import works excel file created HOBOware calibrating MX801 combined Salinity logger. excel file created HOBOware. Run :   create example files can inspected used run import e.g. :   import now requires YAML file (details.yml) look something like :   Note calibration_start calibration_end define start end deployment window. legacy U24 U26 loggers calibrated window deployment window .","code":"calibration_start: 2025-01-02 14:50:02 calibration_end: 2025-01-04 15:10:02 do_device:   product: MX801   serial_number: 22145888 cond_device:   product: MX801   serial_number: 22145888 timezone: EST example_paths <- setup_example_dir(site_filter = \"BBC\",                                    year_filter = 2025) deployment_dirs <- example_paths$deployments print(deployment_dirs) qc_deployment(deployment_dirs[1]) calibration_start: 2025-01-02 15:50:02 calibration_end: 2025-01-04 13:00:02 timezone: EST serial_number: 22145899"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/qc_deployment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Run automatic quality control on a deployment — qc_deployment","text":"","code":"if (FALSE) { # \\dontrun{   paths <- setup_example_dir()   a <- qc_deployment(paths$deployment)  } # }"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/read_and_format_placements.html","id":null,"dir":"Reference","previous_headings":"","what":"Read and format placements — read_and_format_placements","title":"Read and format placements — read_and_format_placements","text":"Read format placements","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/read_and_format_placements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read and format placements — read_and_format_placements","text":"","code":"read_and_format_placements(placement_path)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/read_and_format_placements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read and format placements — read_and_format_placements","text":"placement_path path placements file","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/read_and_format_placements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read and format placements — read_and_format_placements","text":"placement data_frame addition reading file following changes made: column names headers forced lower case, dates formatted dates handling yyyy-mm-dd format format excel converts . type forced lower case.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/read_deployment_yaml.html","id":null,"dir":"Reference","previous_headings":"","what":"Read deployment metadata from a yaml file — read_deployment_yaml","title":"Read deployment metadata from a yaml file — read_deployment_yaml","text":"used import types 0 (CSV) 2 (MX801 excel file) read accompanying yaml file format standard metadata list","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/read_deployment_yaml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read deployment metadata from a yaml file — read_deployment_yaml","text":"","code":"read_deployment_yaml(file, mx801 = FALSE)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/read_deployment_yaml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read deployment metadata from a yaml file — read_deployment_yaml","text":"file YAML file path mx801 Set TRUE importing mx801 slightly different requirements","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/read_deployment_yaml.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read deployment metadata from a yaml file — read_deployment_yaml","text":"Standardized metadata list","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/read_mx801_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Import data from MX801 logger — read_mx801_data","title":"Import data from MX801 logger — read_mx801_data","text":"Import data MX801 logger","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/read_mx801_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import data from MX801 logger — read_mx801_data","text":"","code":"read_mx801_data(file)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/read_mx801_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import data from MX801 logger — read_mx801_data","text":"file Path calibrated Excel (.xlsx) file MX801 logger Column descriptions google doc","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/read_mx801_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import data from MX801 logger — read_mx801_data","text":"data frame standard data columns","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/replace_na_runs.html","id":null,"dir":"Reference","previous_headings":"","what":"Replace short runs of NA in logical vector — replace_na_runs","title":"Replace short runs of NA in logical vector — replace_na_runs","text":"runs NA longer max_run surrounded TRUE replaced TRUE. NAs replaced FALSE.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/replace_na_runs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Replace short runs of NA in logical vector — replace_na_runs","text":"","code":"replace_na_runs(x, max_run = 6, boundary = FALSE)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/replace_na_runs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Replace short runs of NA in logical vector — replace_na_runs","text":"x logical vector may NAs max_run maximum run length replace boundary treat values beyond edge data","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/replace_na_runs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Replace short runs of NA in logical vector — replace_na_runs","text":"vector corresponding x qualifying runs replaced TRUE","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/replace_na_runs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Replace short runs of NA in logical vector — replace_na_runs","text":"Use boundary specify behavior data boundaries. instance, boundary = TRUE, c(NA, TRUE) result c(TRUE, TRUE); otherwise result c(FALSE, TRUE).","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/report_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce stats and a report for a site and year — report_site","title":"Produce stats and a report for a site and year — report_site","text":"Produces daily stats report seasonal stats number graphs specified site year.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/report_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce stats and a report for a site and year — report_site","text":"","code":"report_site(   site_dir,   check = TRUE,   baywatchers = TRUE,   salinity = TRUE,   clip = NULL )"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/report_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce stats and a report for a site and year — report_site","text":"site_dir Full path site data (.e., <base>/<year>/<site>) check TRUE, runs check_site make sure source files changed baywatchers TRUE, 2 additional comparison plots Baywatchers data salinity TRUE, include additional time series plot salinity clip Optionally supply pair dates (yyyy-mm-dd format) clip seasonal statistics","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/report_site.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Produce stats and a report for a site and year — report_site","text":"Two files written: daily_stats_<site>_<year>.csv - file row day season several summary statistics report_<site>_<year>.pdf - PDF report table seasonal stats number graphs stitch_site must run first create necessary data.  stitch_site run point past, highly advisable run check_site make sure deployment files changed since last stitch_site run. Including plots based Baywatchers data requires file within site baywatchers/<site>.csv. file must include date time (column includes Date_Time name) dissolved oxygen mg/L (name, percent, pct, %). Column names case-insensitive. file missing necessary columns present, error reported. can use baywatchers = FALSE datasets Baywatchers data exclude plots. may clip seasonal statistics date range, example, clip = c(\"2024-08-10\", \"2024-08-25\"). affect seasonal statistics table report CSV file, graphs.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/rle2.html","id":null,"dir":"Reference","previous_headings":"","what":"A drop-in replacement for base::rle() that treats all NAs as identical — rle2","title":"A drop-in replacement for base::rle() that treats all NAs as identical — rle2","text":"drop-replacement base::rle() treats NAs identical","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/rle2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A drop-in replacement for base::rle() that treats all NAs as identical — rle2","text":"","code":"rle2(x)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/rle2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A drop-in replacement for base::rle() that treats all NAs as identical — rle2","text":"x atomic vector","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/rle2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A drop-in replacement for base::rle() that treats all NAs as identical — rle2","text":"object class rle","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/seasonal_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Produce seasonal stats for a site — seasonal_stats","title":"Produce seasonal stats for a site — seasonal_stats","text":"Produces data frame seasonal stats.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/seasonal_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Produce seasonal stats for a site — seasonal_stats","text":"","code":"seasonal_stats(core, clip = NULL)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/seasonal_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Produce seasonal stats for a site — seasonal_stats","text":"core Core data frame, produced stitch_site clip Optionally supply pair dates (yyyy-mm-dd format) clip seasonal statistics","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/seasonal_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Produce seasonal stats for a site — seasonal_stats","text":"List : table Data frame column statistic name column numeric statistics formatted Data frame column statistic name column formatted statistics","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/setup_example_dir.html","id":null,"dir":"Reference","previous_headings":"","what":"Set up an example directory — setup_example_dir","title":"Set up an example directory — setup_example_dir","text":"Set example directory testing demonstrating BuzzardsBay package functions. created within parent_dir called \"BB_Data\" contain example calibrated data files single deployment well project level metadata.  files bundled package can found source within inst/extdata/.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/setup_example_dir.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set up an example directory — setup_example_dir","text":"","code":"setup_example_dir(   parent_dir = NULL,   delete_old = FALSE,   year_filter = NULL,   site_filter = NULL,   deployment_filter = NULL )"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/setup_example_dir.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set up an example directory — setup_example_dir","text":"parent_dir directory create example files tree. left NULL set tempdir(). Either way error thrown \"BB_Data\" folder already exists parent_dir - unless delete_old TRUE/ delete_old TRUE preexisting example data deleted. year_filter Optional, specified example data deployments specified year copied . site_filter Optional specified example data specified site copied . deployment_filter Optional, specified example data given deployment copied . deployment date e.g. \"2023-06-09.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/setup_example_dir.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set up an example directory — setup_example_dir","text":"named list paths : base_dir path newly created example base directory (\"BB_Data\"). deployment_dir path first deployment folder within base_dir. deployment_dirs vector paths example deployment directories created","code":""},{"path":[]},{"path":"https://umasscds.github.io/BuzzardsBay/reference/setup_example_dir.html","id":"-","dir":"Reference","previous_headings":"","what":"2023","title":"Set up an example directory — setup_example_dir","text":"RB1 2023-06-09 original example data used developing package. WH1X 2023-06-09, 2023-06-16, 2023-06-23 site includes QC'd files; corresponds included 2023 Baywatchers data extract_baywatchers(), required two figures seasonal report.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/setup_example_dir.html","id":"--1","dir":"Reference","previous_headings":"","what":"2024","title":"Set up an example directory — setup_example_dir","text":"generally added resolve errors came . OB9 first 2024 data set. Added document changes 2023 otherwise fairly standard. OB1 2024-05-21, 2024-05-31  Added resolve issue sensor swapped placements.csv updated indicate swap, QC module still throwing errors. SB2X 2024-05-15, 2024-06-10 Conductivity calibrated single point calibration two deployments. BD1 2024-06-21 One calibrated conductivity columns weird data set \"High Range High Range\"  instead \"High Range\".","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/setup_example_dir.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set up an example directory — setup_example_dir","text":"","code":"if (FALSE) { # \\dontrun{ setup_example() } # }"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/stitch_site.html","id":null,"dir":"Reference","previous_headings":"","what":"Stitch all deployments for a site and year — stitch_site","title":"Stitch all deployments for a site and year — stitch_site","text":"Merges QC'd deployments specified site year writes result files. Missing dates times interpolated, warning gaps suspiciously large. Data range sensor flagged. Writes three versions data file complete season, hash files use check_site.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/stitch_site.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stitch all deployments for a site and year — stitch_site","text":"","code":"stitch_site(site_dir, max_gap = 1, report = FALSE, baywatchers = TRUE)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/stitch_site.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stitch all deployments for a site and year — stitch_site","text":"site_dir Full path site data (.e., <base>/<year>/<site>). path must include QC'd results max_gap Maximum gap quietly accept deployments (hours); message printed gap exceeded report Run report_site TRUE baywatchers TRUE, 2 additional comparison plots Baywatchers data (report = TRUE; see report_site)","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/stitch_site.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Stitch all deployments for a site and year — stitch_site","text":"Three versions data file written <site_dir>/combined/: archive_<site>_<year>.csv - contains columns, complete archival. WPP_<site>_<year>.csv - contains columns required MassDEP (.k.. \"WPP\" file). core_<site>_<year> - just good stuff. file used producing summaries reports. additional file written internal use check_site: hash.txt - tab-delimited file lists paths deployment files md5 hashes.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/suppress_specific_warnings.html","id":null,"dir":"Reference","previous_headings":"","what":"Suppress some specific warnings — suppress_specific_warnings","title":"Suppress some specific warnings — suppress_specific_warnings","text":"suppress_specific_warnings() suppress warnings match regular expression patterns either coded function supplied via patterns argument, without suppressing warnings match patterns.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/suppress_specific_warnings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suppress some specific warnings — suppress_specific_warnings","text":"","code":"suppress_specific_warnings(x, patterns = NULL)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/suppress_specific_warnings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suppress some specific warnings — suppress_specific_warnings","text":"x expression. patterns One patterns check warning messages .","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/suppress_specific_warnings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suppress some specific warnings — suppress_specific_warnings","text":"Possibly output x","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/suppress_specific_warnings.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Suppress some specific warnings — suppress_specific_warnings","text":"initial (possibly ) use catch warning thrown ggplot due NA value created using lead() plotting time day. suppress_specific_warnings() used rmarkdown report needs public function intended external use.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/suppress_specific_warnings.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suppress some specific warnings — suppress_specific_warnings","text":"","code":"suppress_specific_warnings(warning(\"this is a warning\"), \"this is\") suppress_specific_warnings(warning(\"this is a warning\")) #> Warning: this is a warning"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/tide_station_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Locations of NOAA tide stations within Buzzards Bay — tide_station_info","title":"Locations of NOAA tide stations within Buzzards Bay — tide_station_info","text":"Locations NOAA tide stations within Buzzards Bay","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/tide_station_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Locations of NOAA tide stations within Buzzards Bay — tide_station_info","text":"","code":"tide_station_info"},{"path":[]},{"path":"https://umasscds.github.io/BuzzardsBay/reference/tide_station_info.html","id":"tide-station-info","dir":"Reference","previous_headings":"","what":"tide_station_info","title":"Locations of NOAA tide stations within Buzzards Bay — tide_station_info","text":"data frame 13 rows 5 columns: name Station name. can used rtide::tide_height() id Station ID lat,lon Station latitude longitude predictions type model used make predictions. One \"Harmonic\" `\"Subordinate\". Descriptions NOAA: Harmonic stations stations tidal harmonic constants tidal datums. Tide predictions harmonic stations generated directly harmonic constants. Harmonic stations greatest capabilities within NOAA Tide Predictions service providing predictions different data intervals relative different tidal datums. capabilities controlled within interface. Subordinate stations historic stations tidal harmonic constants available. Tide predictions subordinate stations generated first generating high/low tide predictions designated harmonic station, called \"reference station\"; time height adjustments applied correct high/low predictions tidal conditions subordinate station. Subordinate stations allow generation high/low tide predictions, heights relative Mean Lower Low Water (MLLW), standard chart datum U.S. coastline. used Indicates whether station sites.csv rtide_name name station used rtide package","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/tide_station_info.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Locations of NOAA tide stations within Buzzards Bay — tide_station_info","text":"<\"https://tidesandcurrents.noaa.gov/tide_predictions.html?gid=1403\">","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/update_bb_parameters.html","id":null,"dir":"Reference","previous_headings":"","what":"Update Buzzards Bay parameters — update_bb_parameters","title":"Update Buzzards Bay parameters — update_bb_parameters","text":"Internal function update BuzzardsBay package parameters.  sets parameters based default parameters package, required global parameter file  (paths$global_parameters) optional site specific parameter file (paths$site_parameters).","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/update_bb_parameters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update Buzzards Bay parameters — update_bb_parameters","text":"","code":"update_bb_parameters(paths)"},{"path":"https://umasscds.github.io/BuzzardsBay/reference/update_bb_parameters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update Buzzards Bay parameters — update_bb_parameters","text":"paths Likely output lookup_paths() used items $global_parameters $site_parameters.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/update_bb_parameters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Update Buzzards Bay parameters — update_bb_parameters","text":"Nothing returned, package parameters updated.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/reference/update_bb_parameters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Update Buzzards Bay parameters — update_bb_parameters","text":"parameter may set multiple locations case precedence decreasing order site parameter file, global parameter file, package default value default_bbp.  currently set parameters stored bbp environment within package. Note, parameters need set locations. recommended set parameters global file ones need changed site specific file. See create_parameter_file() create file default values.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109031","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9031","title":"BuzzardsBay 0.1.0.9031","text":"Added import_type metadata created qc_deployment() MX801 imports (type 2) dropped warning less 95% data calibrated window. loggers data typically extends well beyond deployed window, warning always triggered informative. Added example-data vignette.","code":""},{"path":[]},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"change-to-mx801-import-0-1-0-9030","dir":"Changelog","previous_headings":"","what":"Change to MX801 import.","title":"BuzzardsBay 0.1.0.9030","text":"Switch using YAML file (.yml) importing metadata MX801, ignoring details sheet excel file previously used. change made : (1) allow users specify deployment window yaml file (use calibration_start calibration_end); (2) make import less susceptible possible future changes HOBOware details sheet. part import complicated likely break minor changes format. new details.yml file calibrated directory created users format: path example file can retrieved : system.file(\"extdata/2025/BBC/2025-01-04/Calibrated/details.yml\", package = \"BuzzardsBay\")","code":"calibration_start: 2025-01-02 15:50:02 calibration_end: 2025-01-04 13:00:02 timezone: EST serial_number: 22145899"},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"change-to-csv-import-0-1-0-9030","dir":"Changelog","previous_headings":"","what":"Change to CSV import.","title":"BuzzardsBay 0.1.0.9030","text":"Previously CSV export expected calibration_start calibration_end times YAML file match date time first last record file. Now, need match rows calibration_start calibation_end dropped.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"other-0-1-0-9030","dir":"Changelog","previous_headings":"","what":"Other","title":"BuzzardsBay 0.1.0.9030","text":"Document three import types file formats qc_deployment()","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109029","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9029","title":"BuzzardsBay 0.1.0.9029","text":"Implement changes analysis module requested April Changes stitch_site(): Fail politely run site QC data. Quote strings writing Archive WPP files, comments sometimes include commas, -CSVs. Quoting makes files robust. ’s need quote strings core files, don’t comment fields. Always use blank, #N/CSVs. Reject rows Cal = 1 unless Gen_QC 11 12. Change Unique_ID  make easier compare across sites. Instead serial numbers, use form “AB2_2024-08-06_14:40:00”. Changes daily stats Add minimum maximum temperature. Seasonal stats Report_site now writes seasonal stats CSV addition including stats table report. Round mean duration 0.1 hours. Add standard deviation . Change text % data missing “percent rows missing data”. Add option report_site (‘clip’) restrict dates seasonal statistics. Plots clipped dates. Now reports date range (whether clipped) seasonal stats; clipped, ’s footnote report. Changes report: Move figure captions figures (looks odd!). Add vertical green lines marking starts deployments Fig. 2. Note: required adding new column (“Deployment”) core data file, file doesn’t contain QC data (added three files consistency). Deployment 1 Gen_QC 12, empty otherwise. result change, previously-stitched sites re-stitched. ’ll get error reminding sites hasn’t done. Add time series salinity date, deployment lines. plot optional: use salinity = FALSE disable . ’ve added plot daily salinity, two Baywatchers plots. “deep” Baywatchers samples included (S_D = ‘D’). Baywatchers points now interpolated points within 10 minutes. none available, points dropped.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109028","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9028","title":"BuzzardsBay 0.1.0.9028","text":"Change default PDF engine hopes making report_site work Macs. effect Windows machines.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109027","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9027","title":"BuzzardsBay 0.1.0.9027","text":"Fix bug occurred wasn’t gap deployments Correct Fig. 8 caption","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109026","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9026","title":"BuzzardsBay 0.1.0.9026","text":"Fix formatting First day warmer /colder Change tinytex suggests (’s needed QC side) check installation report_site, installing separate TinyTeX software machine. Add description install TinyTeX README.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109025","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9025","title":"BuzzardsBay 0.1.0.9025","text":"Add tinytex imports DESCRIPTION guarantee tinytex installed BuzzardsBay installed. simple CSV import used qc_deployment() longer requires cond_calibration item YAML file, intended required ambiguously defined. Fixed minor bug setup_example_dir() impact users package caused function fail inputs.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109024","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9024","title":"BuzzardsBay 0.1.0.9024","text":"Includes initial complete version Analysis Module. Additions include: report_site now produces seasonal report PDF table seasonal statistics series plots extract_baywatchers processes Baywatchers data original Excel file given year various bug fixes improvements details, see README.","code":""},{"path":[]},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"add-checks-to-qc_deployment-for-depth-column-0-1-0-9023","dir":"Changelog","previous_headings":"","what":"Add checks to qc_deployment() for Depth column.","title":"BuzzardsBay 0.1.0.9023","text":"Depth less min_depth (defaults 0) write 7 Depth_QC, add Wl flag, write 91 GEN_QC. Depth greater max_depth (defaults 9) write 7 Depth_QC, add Wh flags, write 9999 GEN_QC GEN_QC empty write new values. GEN_QC 9999 depth results 91 result 9999 ensures reviewer responds raised flags. GEN_QC 9 depth produces 91 91 takes precedence, ’s informative GEN_QC 9 depth produces 9999 9 takes precedence.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"required-file-changes-0-1-0-9023","dir":"Changelog","previous_headings":"","what":"Required file changes","title":"BuzzardsBay 0.1.0.9023","text":"Add following /bb_parameters.yml updating version.","code":"min_depth: 0 max_depth: 9"},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109022","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9022","title":"BuzzardsBay 0.1.0.9022","text":"bug fixes Certain missing deployments (date folder contained metadata file QC file) caused crash instead politely noted. Text fields QA_Comment inconsistently reported #N/archive WPP result files. Bad QC codes Gen_QC weren’t caught, though bad QC codes . Test carefully errors test suite.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109021","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9021","title":"BuzzardsBay 0.1.0.9021","text":"Minor bug fixes Always use uppercase site abbreviations. Check_site now checks outdated reports alerts . Previously, possible run stitch_site report_site, edit deployment data rerun stitch_site without report_site, end outdated reports way know . Fixed bug Duration_Under_6 (3) daily stats: runs past midnight report 10 minutes day started, midnight treated tomorrow, last sample wasn’t counted.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109020","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9020","title":"BuzzardsBay 0.1.0.9020","text":"update introduces Analysis Module. extension stitches deployments site year, producing three result data files (archive, WPP, core). facility check result files date. produces daily statistics file report seasonal stats series graphs. Included: stitch_site(). Stitches deployments creates result data files. check_site(). Checks see deployment data changed since stitch_site() run. report_site(). Produces CSV daily stats PDF report seasonal stats graphs. function partially implemented point: produces daily stats file. details, see README. Note: ’ll need update sites.csv <year>\\Metadata\\ folders include WaterBody. WaterBody, Latitude, Longitude missing, stitch_site() still run, report missing.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109019","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9019","title":"BuzzardsBay 0.1.0.9019","text":"update bug fixes impact users. Fixed bug #11 lookup_paths() caused fail using arguments deployment_dir. Also now requires either deployment_dir base_dir arguments - necessarily year, site, deployment_date return paths items able resolve. Added unit test lookup_paths().","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109018","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9018","title":"BuzzardsBay 0.1.0.9018","text":"Fixed bug Salinity check cause low variation salinity flag (Slv) overwrite duplicate salinity flags. bug first detected MX801 import present previously run QAQC. affects salinity, rows low variation salinity detected. low variation flag always correct salinity flags might either dropped erroneously show along low variation salinity flag. Non-salinity flags affected. Suppressed confusing chatter readxls::read_excel() showed calling qc_deployment() output MX801 logger. Updated test MX801 logger output.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109017","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9017","title":"BuzzardsBay 0.1.0.9017","text":"Documentation edits Added additional options get_expected_column_names() support aggregation analysis modules. Fixed bug parse_mx801_details() works regardless carriage returns new lines within cells encoded. previously worked carriage return (“) new line (”“). expect differences input files may trace back whether calibration done mac PC ’s just guess.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109016","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9016","title":"BuzzardsBay 0.1.0.9016","text":"Fixed bug format_csv_date_time() caused drop time component midnight. E.g. “8/7/2024 0:00” became “2024-08-07”.","code":""},{"path":[]},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"csv-import-0-1-0-9015","dir":"Changelog","previous_headings":"","what":"CSV Import","title":"BuzzardsBay 0.1.0.9015","text":"new simple, CSV import now supported. fallback case updates HOBOware loggers break targeted imports. simple CSV import expects CSV file YAML (.yml) file. implemented import type 0, uses internal function import_calibrated_data_0() called import_calibrated_data(), , turn, called qc_deployment(). use import: import_types.csv update (add) default line: default,0 means import type isn’t identified model listed placement CSV import used. placments.csv want use CSV import use model name import_types.csv default CSV import used. recommend using model name -CSV appended; e.g.  instead MX801 use MX801-CSV. deployment’s Calibrated directory create appropriate CSV YAML file described .","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"csv-file-0-1-0-9015","dir":"Changelog","previous_headings":"CSV Import","what":"CSV file","title":"BuzzardsBay 0.1.0.9015","text":"CSV file columns resolved name order import attempt resolve several different column naming conventions. following work: canonical column names used package: “Date_Time”, “Raw_DO”, “Temp_DOLog”, “”, “DO_Pct_Sat”, “High_Range”, “Temp_CondLog”, “Spec_Cond”, “Salinity”, “Depth”, “Latitude”, “Longitude”. last three optional, rest required. Columns names MX801 logger. example saving first sheet CSV. Column names U24 U26 loggers. However, combining data two loggers single CSV two temperature columns manually renamed “Temp_CondLog”, “Temp_DOLog” otherwise indistinguishable. using column names please verify carefully various , Conductivity, Salinity columns properly identified. example make sure resulting “” column calibrated values “Raw_DO” column uncalibrated values.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"yaml-file-0-1-0-9015","dir":"Changelog","previous_headings":"CSV Import","what":"YAML file","title":"BuzzardsBay 0.1.0.9015","text":"YAML file following items required: calibration_start: date time start deployment. field calibrated sensors (U24, U26) also calibration time. factory calibrated sensors (MX801) calibration time. calibration_end: , end deployment /calibrated window. timezone: timezone reported logger /calibration software. output HOBOware uses GMT offset like “GMT-04:00”, broadly supported timezone accepted . MX801 uses timezone code “EST” also accepted . product: dissolved oxygen sensor e.g.  “HOBO U26-001 Dissolved Oxygen”, “U26-01”, “MX801”. serial_number: device serial number. product: conductivity sensor e.g. “HOBO U24-002 Conductivity” “U24-002” serial_number: Conductivity sensor serial number. Additional items appear metadata description document permitted retained. Items appear document ignored.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109014","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9014","title":"BuzzardsBay 0.1.0.9014","text":"Add MX801 import example data short trial runs. Add data extdata/2025/BBC Update sites, placements, import_types tables. Site information BBC accurate/real. copied info another site. Add line MX801,2 import_types.csv table. tells qc_deployment() use different import function MX801 loggers. placements table MX801 logger appear twice placement, Cond. example: Add faked tide rider deployment data: WFH/2024-04-09/ Dropped many redundant records. Made fake calibrated Cond data accompany . ’m sure metadata fully updated fake data. Add example data aggregation analysis module empty test functions. final QC CSV metadata YAML files several deployments sites AB2 E33. sites associated loggers also added placements.csv using arbitrary date consistent example data. Use following setup directories test : ","code":"BBC,22070944,MX801,DO,1/1/25, BBC,22070944,MX801,Cond,1/1/25, example_paths <- setup_example_dir(year_filter = 2024, site_filter = \"AB2\") site_dir <- dirname(example_paths$deployment) example_paths <- setup_example_dir(year_filter = 2024, site_filter = \"E33\") site_dir <- dirname(example_paths$deployment)"},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109013","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9013","title":"BuzzardsBay 0.1.0.9013","text":"Drop Sm flag (Salinity data missing). salinity data missing set DO_Calibration_QC column 34. Extend y axis interactive plot 5% range data slight buffer around data. Add tests consistent CSV output RB1 2023-06-09.","code":""},{"path":[]},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"necessary-file-updates-for-this-version-0-1-0-9012","dir":"Changelog","previous_headings":"","what":"Necessary file updates for this version","title":"BuzzardsBay 0.1.0.9012","text":"New required global parameter file: <base_dir>/bb_parameters.yml controls flag parameters. Similar files can created site directories set site specific values. Site versions need set values differ global values. New required import type table <base_dir>/import_type.csv create required files:","code":"base_dir <- \"path to base directory\" # set this create_parameter_file(base_dir) import_type_file <- system.file(\"extdata/import_types.csv\", package = \"BuzzardsBay\") file.copy(import_type_file, base_dir)"},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"parameters-0-1-0-9012","dir":"Changelog","previous_headings":"","what":"Parameters","title":"BuzzardsBay 0.1.0.9012","text":"parameters used flagging issues data now user configurable global parameter file site specific parameter files. See note creating global parameter file . override global values site create identically named YAML file site directory (<base_dir>/<year>/<site>) set values . recommend including values site specific file want change site (don’t copy entire file). explanation parameters see help bb_options()","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"sites-with-no-salinity-data-0-1-0-9012","dir":"Changelog","previous_headings":"","what":"Sites with no salinity data","title":"BuzzardsBay 0.1.0.9012","text":"qc_deployment() now works deployments calibrated fixed salinity value. cases salinity related data NA output qc_deployment(). triggered either (1) Salinity value (ppt) item calibrated details file. (2) Salinity column missing calibrated data.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"example-data-0-1-0-9012","dir":"Changelog","previous_headings":"","what":"Example Data","title":"BuzzardsBay 0.1.0.9012","text":"Added OB9 2024-07-23 example deployment -888.88 sensor error values throw plot range. Added OB1 2024-07-30, deployment calibrated single, fixed salinity value.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"flags-0-1-0-9012","dir":"Changelog","previous_headings":"","what":"Flags","title":"BuzzardsBay 0.1.0.9012","text":"Added checks error values calibrated Salinity. Previously error codes (-888.88) flagged uncalibrated versions columns, new example data shows calibrated values. Fixed bug flags caused non-immediate rejection flags overwrite immediate rejection flags “Flags” column columns types flags thrown. Now previously “Gen_QC” column correctly set 9 immediate rejection flags - even previously flags might overwritten.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"plotting-0-1-0-9012","dir":"Changelog","previous_headings":"","what":"Plotting","title":"BuzzardsBay 0.1.0.9012","text":"plots now set y-range range data excluding values flagged sensor errors (-888.88) constrained based global parameters plot_max_do, plot_min_do, plot_max_sal, plot_min_sal, plot_max_temp, plot_min_temp. interactive plots now include red circles last observation prior deployment first current deployment, black circles jumps.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"refactoring-0-1-0-9012","dir":"Changelog","previous_headings":"","what":"Refactoring","title":"BuzzardsBay 0.1.0.9012","text":"qc_deployment() function broken smaller functions. Importing calibrated data now done several sub-functions manner makes easier define different import mechanism different logger types. New lookup_paths() function generates paths kinds files. Many deployment specific. returned list also includes deployment_date, site, year closely related paths. New import_calibrated_data() called read calibrated data. calls numbered helper functions read data based model types stored placements.csv import_type.csv table crosswalks model numbers input type integer. New import_calibrated_data_1() imports first type calibrated data. HOBOware CSV details.txt files ’ve working . anticipated import_calibrated_data_2() function import MX801 logger’s excel file output. New function read_and_format_placements() imports placements.csv file cleans formatting issues. New function lookup_devices() returns device names serial numbers given deployment placements.csv. New required parameter file import_type.csv stored base directory - ’s year specific. connects device models placements import type thus provides mechanism importing different formats associated different logger models.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"time-0-1-0-9012","dir":"Changelog","previous_headings":"","what":"Time","title":"BuzzardsBay 0.1.0.9012","text":"convert_to_utc() renamed apply_timezone() now handles GMT offset timezone definitions (\"GMT-04:00\") timezones (\"EDT\")","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109011","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9011","title":"BuzzardsBay 0.1.0.9011","text":"Fix bug date times prior deployment. Problem excel changing date format prior deployment read add report plots resulted error. Add example data BD1/2024-09-23 (target) BD1/2024-09-17 (prior deployment) Add test reproduce bug Add new function format_csv_date_time() used cleanup date time data either expected format format excel changes . similar format_csv_date() works date-time columns.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109010","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9010","title":"BuzzardsBay 0.1.0.9010","text":"Fix namespace bug. tide_station_info dataset included package erroneously listed exported object. caused package fail install cleanly.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109009","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9009","title":"BuzzardsBay 0.1.0.9009","text":"New convert_to_utc() allows converting local date times UTC utilizing GMT offset HOBOware uses place timezone. New function is_daylight() returns TRUE date-times correspond daylight. Update day night plotting reports reflect actual sunrise sunset time increase contrast day night shading. Add functions estimating plotting tide height: get_tideheight() plot_tide_sun() NOTE, however, due limitation rtide package doesn’t work tide stations Buzzards Bay tide height added reports. Reports now include portion prior deployment within six hours current deployment. static plots last observation preceding deployment first current highlighted red circle.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109008","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9008","title":"BuzzardsBay 0.1.0.9008","text":"Add bunch test data see setup_example_dir() description test data files added. Update setup_example_dir() subset data can specified, case data copied example directory. qc_deployment() now works conductivity calibrated single calibration point. set way yet, conceptual problem Cond. use single point calibration qc_deployment() determine start end calibration window. Add “calibration_points” metadata conductivity. Delete duplicated “High Range” conductivity column heading present. BD1 sensor generating “High Range High Range (μS/cm)” column. Fix bug caused sensor swaps result rejected placements due overly strict data comparison placements table. Replace “temperature Temp” calibrated CSV headings “Temp” similar “High Range” issue appears calibrated files example Ob1/2024-05-31 subsequent deployments conductivity file. Allow serial numbers missing calibrated file headings. OB1/2024-05-31 calibrated conductivity. missing SN pulled details file populate metadata two checked .","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109007","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9007","title":"BuzzardsBay 0.1.0.9007","text":"Allow dates placements.csv either month/day/year year-month-day New internal function format_csv_date() takes text dates either month/day/year year-month-day converts year-month-day text. intended using dates CSV files might edited excel messes dates.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109006","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9006","title":"BuzzardsBay 0.1.0.9006","text":"Add 2024 example data - now two example datasets. setup_example_dir() return list new item deployments vector deployment directories. deployment item still exists first item. also sets deployment directories metadata files year. Fixed bug QAQC report code caused temperature flags logger considered temperature flags plotting. Updated qc_deployment() helper functions handle changes CSV file column names 2023 2024 example data. now work formats.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109005","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9005","title":"BuzzardsBay 0.1.0.9005","text":"Minor edits README Work new 2024 example files conductivity file site id number added series name. file “Conc” dropped series name now: “Series: Adj, mg/L”” types files old new versions processed correctly updated code.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109004","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9004","title":"BuzzardsBay 0.1.0.9004","text":"Add bb_options() setting retrieving global parameters stored private environment, bbp. Move auto qc parameters `[qc_deployment()] helper functions global parameters. Add tide_station_info dataset containing locations NOAA tide stations Buzzard’s bay. Add inst/rmd/QAQC_report.rmd plots summary information facilitate quality control quality assurance. Add make_deployment_report() make QAQC report data deployment directory. qc_deployment() now makes report automatically unless new report argument set FALSE.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109003","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9003","title":"BuzzardsBay 0.1.0.9003","text":"2024-05-10 Update example dataset. prior example data Conductivity didn’t match Cond. data . Update Details.txt processing work newer data different line endings. now works combination CR LF line endings. Add test consistent conductivity dropped duplicate conductivity column. Add test consistent calibration start end time two details files consolidated start end times metadata file. Drop _flag columns. “Flags” covers flags. Adopt standard “year-month-day” date, “year-month-day hⓂ️s” date time formats everywhere. Logger SN’s must placement table site indicated deployment path. Deployment date path must match date last observation data. Add range checks sites table , Temperature Columns, Pct. Saturation, Add ratios metadata - “meter/titration value (mg/L)” divided “conc” details.txt file created HOBOware start end calibrations Add sites.csv placements.csv example data files created setup_example_data() Cut pre post calibration observations head tail file. Add “pct_calibrated”, “n_records”, “pct_immediate_rejection”, “pct_flagged_for_review” metadata. Add warning “pct_calibrated” less 95.","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109002","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9002","title":"BuzzardsBay 0.1.0.9002","text":"Add README.Rmd NEWS.md files. Update temperature flags indicate dataset associated .","code":""},{"path":"https://umasscds.github.io/BuzzardsBay/news/index.html","id":"buzzardsbay-0109001","dir":"Changelog","previous_headings":"","what":"BuzzardsBay 0.1.0.9001","title":"BuzzardsBay 0.1.0.9001","text":"Initial package","code":""}]
